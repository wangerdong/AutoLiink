// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ContiMessage.pb.h"
// @@protoc_insertion_point(imports)

@implementation ContiMessageRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [ContiMessageRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface ContiMessage ()
@property (strong) NSString* appId;
@property (strong) NSString* categoryId;
@property (strong) NSString* funcId;
@property (strong) NSString* appVersion;
@property (strong) NSString* timeStamp;
@property SInt32 isencryption;
@property (strong) NSString* data;
@end

@implementation ContiMessage

- (BOOL) hasAppId {
  return !!hasAppId_;
}
- (void) setHasAppId:(BOOL) _value_ {
  hasAppId_ = !!_value_;
}
@synthesize appId;
- (BOOL) hasCategoryId {
  return !!hasCategoryId_;
}
- (void) setHasCategoryId:(BOOL) _value_ {
  hasCategoryId_ = !!_value_;
}
@synthesize categoryId;
- (BOOL) hasFuncId {
  return !!hasFuncId_;
}
- (void) setHasFuncId:(BOOL) _value_ {
  hasFuncId_ = !!_value_;
}
@synthesize funcId;
- (BOOL) hasAppVersion {
  return !!hasAppVersion_;
}
- (void) setHasAppVersion:(BOOL) _value_ {
  hasAppVersion_ = !!_value_;
}
@synthesize appVersion;
- (BOOL) hasTimeStamp {
  return !!hasTimeStamp_;
}
- (void) setHasTimeStamp:(BOOL) _value_ {
  hasTimeStamp_ = !!_value_;
}
@synthesize timeStamp;
- (BOOL) hasIsencryption {
  return !!hasIsencryption_;
}
- (void) setHasIsencryption:(BOOL) _value_ {
  hasIsencryption_ = !!_value_;
}
@synthesize isencryption;
- (BOOL) hasData {
  return !!hasData_;
}
- (void) setHasData:(BOOL) _value_ {
  hasData_ = !!_value_;
}
@synthesize data;
- (instancetype) init {
  if ((self = [super init])) {
    self.appId = @"";
    self.categoryId = @"";
    self.funcId = @"";
    self.appVersion = @"";
    self.timeStamp = @"";
    self.isencryption = 0;
    self.data = @"";
  }
  return self;
}
static ContiMessage* defaultContiMessageInstance = nil;
+ (void) initialize {
  if (self == [ContiMessage class]) {
    defaultContiMessageInstance = [[ContiMessage alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultContiMessageInstance;
}
- (instancetype) defaultInstance {
  return defaultContiMessageInstance;
}
- (BOOL) isInitialized {
  if (!self.hasAppId) {
    return NO;
  }
  if (!self.hasCategoryId) {
    return NO;
  }
  if (!self.hasFuncId) {
    return NO;
  }
  if (!self.hasAppVersion) {
    return NO;
  }
  if (!self.hasTimeStamp) {
    return NO;
  }
  if (!self.hasIsencryption) {
    return NO;
  }
  if (!self.hasData) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAppId) {
    [output writeString:1 value:self.appId];
  }
  if (self.hasCategoryId) {
    [output writeString:2 value:self.categoryId];
  }
  if (self.hasFuncId) {
    [output writeString:3 value:self.funcId];
  }
  if (self.hasAppVersion) {
    [output writeString:4 value:self.appVersion];
  }
  if (self.hasTimeStamp) {
    [output writeString:5 value:self.timeStamp];
  }
  if (self.hasIsencryption) {
    [output writeInt32:6 value:self.isencryption];
  }
  if (self.hasData) {
    [output writeString:7 value:self.data];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAppId) {
    size_ += computeStringSize(1, self.appId);
  }
  if (self.hasCategoryId) {
    size_ += computeStringSize(2, self.categoryId);
  }
  if (self.hasFuncId) {
    size_ += computeStringSize(3, self.funcId);
  }
  if (self.hasAppVersion) {
    size_ += computeStringSize(4, self.appVersion);
  }
  if (self.hasTimeStamp) {
    size_ += computeStringSize(5, self.timeStamp);
  }
  if (self.hasIsencryption) {
    size_ += computeInt32Size(6, self.isencryption);
  }
  if (self.hasData) {
    size_ += computeStringSize(7, self.data);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ContiMessage*) parseFromData:(NSData*) data {
  return (ContiMessage*)[[[ContiMessage builder] mergeFromData:data] build];
}
+ (ContiMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ContiMessage*)[[[ContiMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ContiMessage*) parseFromInputStream:(NSInputStream*) input {
  return (ContiMessage*)[[[ContiMessage builder] mergeFromInputStream:input] build];
}
+ (ContiMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ContiMessage*)[[[ContiMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ContiMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ContiMessage*)[[[ContiMessage builder] mergeFromCodedInputStream:input] build];
}
+ (ContiMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ContiMessage*)[[[ContiMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ContiMessageBuilder*) builder {
  return [[ContiMessageBuilder alloc] init];
}
+ (ContiMessageBuilder*) builderWithPrototype:(ContiMessage*) prototype {
  return [[ContiMessage builder] mergeFrom:prototype];
}
- (ContiMessageBuilder*) builder {
  return [ContiMessage builder];
}
- (ContiMessageBuilder*) toBuilder {
  return [ContiMessage builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAppId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"appId", self.appId];
  }
  if (self.hasCategoryId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"categoryId", self.categoryId];
  }
  if (self.hasFuncId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"funcId", self.funcId];
  }
  if (self.hasAppVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"appVersion", self.appVersion];
  }
  if (self.hasTimeStamp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"timeStamp", self.timeStamp];
  }
  if (self.hasIsencryption) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isencryption", [NSNumber numberWithInteger:self.isencryption]];
  }
  if (self.hasData) {
    [output appendFormat:@"%@%@: %@\n", indent, @"data", self.data];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasAppId) {
    [dictionary setObject: self.appId forKey: @"appId"];
  }
  if (self.hasCategoryId) {
    [dictionary setObject: self.categoryId forKey: @"categoryId"];
  }
  if (self.hasFuncId) {
    [dictionary setObject: self.funcId forKey: @"funcId"];
  }
  if (self.hasAppVersion) {
    [dictionary setObject: self.appVersion forKey: @"appVersion"];
  }
  if (self.hasTimeStamp) {
    [dictionary setObject: self.timeStamp forKey: @"timeStamp"];
  }
  if (self.hasIsencryption) {
    [dictionary setObject: [NSNumber numberWithInteger:self.isencryption] forKey: @"isencryption"];
  }
  if (self.hasData) {
    [dictionary setObject: self.data forKey: @"data"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ContiMessage class]]) {
    return NO;
  }
  ContiMessage *otherMessage = other;
  return
      self.hasAppId == otherMessage.hasAppId &&
      (!self.hasAppId || [self.appId isEqual:otherMessage.appId]) &&
      self.hasCategoryId == otherMessage.hasCategoryId &&
      (!self.hasCategoryId || [self.categoryId isEqual:otherMessage.categoryId]) &&
      self.hasFuncId == otherMessage.hasFuncId &&
      (!self.hasFuncId || [self.funcId isEqual:otherMessage.funcId]) &&
      self.hasAppVersion == otherMessage.hasAppVersion &&
      (!self.hasAppVersion || [self.appVersion isEqual:otherMessage.appVersion]) &&
      self.hasTimeStamp == otherMessage.hasTimeStamp &&
      (!self.hasTimeStamp || [self.timeStamp isEqual:otherMessage.timeStamp]) &&
      self.hasIsencryption == otherMessage.hasIsencryption &&
      (!self.hasIsencryption || self.isencryption == otherMessage.isencryption) &&
      self.hasData == otherMessage.hasData &&
      (!self.hasData || [self.data isEqual:otherMessage.data]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasAppId) {
    hashCode = hashCode * 31 + [self.appId hash];
  }
  if (self.hasCategoryId) {
    hashCode = hashCode * 31 + [self.categoryId hash];
  }
  if (self.hasFuncId) {
    hashCode = hashCode * 31 + [self.funcId hash];
  }
  if (self.hasAppVersion) {
    hashCode = hashCode * 31 + [self.appVersion hash];
  }
  if (self.hasTimeStamp) {
    hashCode = hashCode * 31 + [self.timeStamp hash];
  }
  if (self.hasIsencryption) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.isencryption] hash];
  }
  if (self.hasData) {
    hashCode = hashCode * 31 + [self.data hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ContiMessageBuilder()
@property (strong) ContiMessage* resultContiMessage;
@end

@implementation ContiMessageBuilder
@synthesize resultContiMessage;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultContiMessage = [[ContiMessage alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultContiMessage;
}
- (ContiMessageBuilder*) clear {
  self.resultContiMessage = [[ContiMessage alloc] init];
  return self;
}
- (ContiMessageBuilder*) clone {
  return [ContiMessage builderWithPrototype:resultContiMessage];
}
- (ContiMessage*) defaultInstance {
  return [ContiMessage defaultInstance];
}
- (ContiMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ContiMessage*) buildPartial {
  ContiMessage* returnMe = resultContiMessage;
  self.resultContiMessage = nil;
  return returnMe;
}
- (ContiMessageBuilder*) mergeFrom:(ContiMessage*) other {
  if (other == [ContiMessage defaultInstance]) {
    return self;
  }
  if (other.hasAppId) {
    [self setAppId:other.appId];
  }
  if (other.hasCategoryId) {
    [self setCategoryId:other.categoryId];
  }
  if (other.hasFuncId) {
    [self setFuncId:other.funcId];
  }
  if (other.hasAppVersion) {
    [self setAppVersion:other.appVersion];
  }
  if (other.hasTimeStamp) {
    [self setTimeStamp:other.timeStamp];
  }
  if (other.hasIsencryption) {
    [self setIsencryption:other.isencryption];
  }
  if (other.hasData) {
    [self setData:other.data];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ContiMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ContiMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setAppId:[input readString]];
        break;
      }
      case 18: {
        [self setCategoryId:[input readString]];
        break;
      }
      case 26: {
        [self setFuncId:[input readString]];
        break;
      }
      case 34: {
        [self setAppVersion:[input readString]];
        break;
      }
      case 42: {
        [self setTimeStamp:[input readString]];
        break;
      }
      case 48: {
        [self setIsencryption:[input readInt32]];
        break;
      }
      case 58: {
        [self setData:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasAppId {
  return resultContiMessage.hasAppId;
}
- (NSString*) appId {
  return resultContiMessage.appId;
}
- (ContiMessageBuilder*) setAppId:(NSString*) value {
  resultContiMessage.hasAppId = YES;
  resultContiMessage.appId = value;
  return self;
}
- (ContiMessageBuilder*) clearAppId {
  resultContiMessage.hasAppId = NO;
  resultContiMessage.appId = @"";
  return self;
}
- (BOOL) hasCategoryId {
  return resultContiMessage.hasCategoryId;
}
- (NSString*) categoryId {
  return resultContiMessage.categoryId;
}
- (ContiMessageBuilder*) setCategoryId:(NSString*) value {
  resultContiMessage.hasCategoryId = YES;
  resultContiMessage.categoryId = value;
  return self;
}
- (ContiMessageBuilder*) clearCategoryId {
  resultContiMessage.hasCategoryId = NO;
  resultContiMessage.categoryId = @"";
  return self;
}
- (BOOL) hasFuncId {
  return resultContiMessage.hasFuncId;
}
- (NSString*) funcId {
  return resultContiMessage.funcId;
}
- (ContiMessageBuilder*) setFuncId:(NSString*) value {
  resultContiMessage.hasFuncId = YES;
  resultContiMessage.funcId = value;
  return self;
}
- (ContiMessageBuilder*) clearFuncId {
  resultContiMessage.hasFuncId = NO;
  resultContiMessage.funcId = @"";
  return self;
}
- (BOOL) hasAppVersion {
  return resultContiMessage.hasAppVersion;
}
- (NSString*) appVersion {
  return resultContiMessage.appVersion;
}
- (ContiMessageBuilder*) setAppVersion:(NSString*) value {
  resultContiMessage.hasAppVersion = YES;
  resultContiMessage.appVersion = value;
  return self;
}
- (ContiMessageBuilder*) clearAppVersion {
  resultContiMessage.hasAppVersion = NO;
  resultContiMessage.appVersion = @"";
  return self;
}
- (BOOL) hasTimeStamp {
  return resultContiMessage.hasTimeStamp;
}
- (NSString*) timeStamp {
  return resultContiMessage.timeStamp;
}
- (ContiMessageBuilder*) setTimeStamp:(NSString*) value {
  resultContiMessage.hasTimeStamp = YES;
  resultContiMessage.timeStamp = value;
  return self;
}
- (ContiMessageBuilder*) clearTimeStamp {
  resultContiMessage.hasTimeStamp = NO;
  resultContiMessage.timeStamp = @"";
  return self;
}
- (BOOL) hasIsencryption {
  return resultContiMessage.hasIsencryption;
}
- (SInt32) isencryption {
  return resultContiMessage.isencryption;
}
- (ContiMessageBuilder*) setIsencryption:(SInt32) value {
  resultContiMessage.hasIsencryption = YES;
  resultContiMessage.isencryption = value;
  return self;
}
- (ContiMessageBuilder*) clearIsencryption {
  resultContiMessage.hasIsencryption = NO;
  resultContiMessage.isencryption = 0;
  return self;
}
- (BOOL) hasData {
  return resultContiMessage.hasData;
}
- (NSString*) dataString {
  return resultContiMessage.data;
}
- (ContiMessageBuilder*) setData:(NSString*) value {
  resultContiMessage.hasData = YES;
  resultContiMessage.data = value;
  return self;
}
- (ContiMessageBuilder*) clearData {
  resultContiMessage.hasData = NO;
  resultContiMessage.data = @"";
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
